"use strict";function pickRandom(t){return t[Math.floor(Math.random()*t.length)]}function practice(){new Vue({el:"#pracice",data:data,getAnswer:function(t,n){var e=_.find(this.data.wordsets,{name:t});return _.find(e.words,{_id:n})},pickSentences:function(t){var n=[];for(i=0;i<t;i++)n.push(pickRandom(data.sentences));return n}})}function sentences(){data.forEach(function(t){$("#sentence-list").prepend(template(t))});new Vue({el:"#sentences",data:data})}$("#sentence-form").on("submit",function(){var t=$("#s_original").val(),n=$("#s_translation").val();return $.post("/sentences/add",{s_original:t,s_translation:n},function(e){e=JSON.parse(e),200===e.status?($("#sentence-list").prepend(template({s_original:t,s_translation:n,_id:e._id})),$("#s_original").val("").focus(),$("#s_translation").val("")):alert("Failed to add new sentence")}),!1}),$(document).on("click",".edit",function(){var t=$(this).parent().parent(),n=$(t).find(".word").text(),e=$(t).find(".translation").text();$("#word").val(n),$("#translation").val(e).focus()}),String.prototype.format=function(){for(var t=this,n=0;n<arguments.length;n++){var e=new RegExp("\\{"+n+"\\}","gi");t=t.replace(e,arguments[n])}return t},$(document).on("click",".sentence-delete",function(){var t=$(this).parent().parent(),n=t.attr("_id");$.post("/sentences/delete",{_id:n},function(){t.remove()})}),$("#sentence-form").on("submit",function(){var t=$("#s_original").val(),n=$("#s_translation").val();return $.post("/sentences/add",{s_original:t,s_translation:n},function(e){e=JSON.parse(e),200===e.status?($("#sentence-list").prepend(template({s_original:t,s_translation:n,_id:e._id})),$("#s_original").val("").focus(),$("#s_translation").val("")):alert("Failed to add new sentence")}),!1}),$(document).on("click",".sentence-edit",function(){var t=$(this).parent().parent(),n=$(t).find(".word").text(),e=$(t).find(".translation").text();$("#word").val(n),$("#translation").val(e).focus()});var wordsets=new Vue({el:"#wordsets",data:{wordsets:jsonData},methods:{editWordset:function(t){window.location="/wordset/"+t},deleteWordset:function(t){var n=this;console.log(this.wordsets),confirm("Are you sure you want to delete this wordset? This cannot be undone.")&&$.post("/wordsets/delete",{_id:t},function(){n.wordsets=n.wordsets.filter(function(n){return n._id!=t}),console.log(n.wordsets)})}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
